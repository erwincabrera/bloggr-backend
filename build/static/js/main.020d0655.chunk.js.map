{"version":3,"sources":["actions/actions.js","services/login.js","components/Notification.js","services/blogs.js","services/users.js","components/Togglable.js","components/BlogForm.js","components/Home.js","components/Users.js","components/User.js","components/Blog.js","App.js","reducers/users.js","store.js","reducers/blogs.js","reducers/notification.js","index.js"],"names":["timeoutId","login","credentials","a","axios","post","response","data","Notification","message","className","token","create","newBlog","config","headers","Authorization","deleteBlog","blog","delete","id","getAll","get","then","update","put","setToken","newToken","addComment","comment","blogId","content","addBlog","title","author","url","dispatch","blogService","type","payload","createNotification","text","timeout","clearTimeout","setTimeout","clearNotifications","setUser","user","Togglable","React","forwardRef","props","ref","useState","showContent","setShowContent","toggle","useImperativeHandle","style","display","children","onClick","label","displayName","BlogForm","setTitle","setAuthor","setUrl","blogFormRef","useRef","onSubmit","e","preventDefault","handleSubmit","current","onChange","target","value","placeholder","Home","blogs","useSelector","state","useDispatch","createBlog","sort","b","likes","map","key","to","Users","users","name","length","User","blogList","Blog","setComment","currentUser","comments","href","updated","updateBlog","window","confirm","status","App","username","setUsername","password","setPassword","allUsers","notification","userMatch","useRouteMatch","blogMatch","useEffect","usersService","storedUser","localStorage","getItem","JSON","parse","err","handleLogin","loginService","setItem","stringify","htmlFor","navbar","Navbar","collapseOnSelect","bg","variant","expand","Container","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","color","Text","Button","size","removeItem","fluid","path","find","params","initialState","reducer","combineReducers","action","concat","eachBlog","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.020d0655.chunk.js","sourcesContent":["import blogService from '../services/blogs'\r\nimport usersService from '../services/users'\r\n\r\nexport const setBlogs = (blogs) => {\r\n  return {\r\n    type: 'SET_BLOGS',\r\n    payload: {\r\n      blogs\r\n    }\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const blogs = await blogService.getAll()\r\n      dispatch({\r\n        type: 'SET_BLOGS',\r\n        payload: {\r\n          blogs\r\n        }\r\n      })\r\n    } catch(err) {\r\n      // Ignore error\r\n    }\r\n  }\r\n}\r\n\r\nexport const addBlog = ({ title, author, url }) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const blog = await blogService.create({ title, author, url })\r\n      dispatch({\r\n        type: 'ADD_BLOG',\r\n        payload: {\r\n          blog\r\n        }\r\n      })\r\n    } catch (err) {\r\n      // Ignore error\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await blogService.update(blog)\r\n      dispatch({\r\n        type: 'UPDATE_BLOG',\r\n        payload: {\r\n          blog\r\n        }\r\n      })\r\n    } catch (err) {\r\n      // Ignore error\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await blogService.deleteBlog(blog)\r\n      if (response.status === 204) {\r\n        dispatch({\r\n          type: 'DELETE_BLOG',\r\n          payload: {\r\n            id: blog.id\r\n          }\r\n        })\r\n      }\r\n    } catch (err) {\r\n      // Ignore error\r\n    }\r\n  }\r\n}\r\n\r\nlet timeoutId\r\n\r\nexport const createNotification = (text, timeout) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'NEW_NOTIFICATION',\r\n      payload: {\r\n        text\r\n      }\r\n    })\r\n    clearTimeout(timeoutId)\r\n    timeoutId = setTimeout(() => {\r\n      dispatch(clearNotifications())\r\n    }, timeout)\r\n  }\r\n}\r\n\r\nexport const clearNotifications = () => {\r\n  return {\r\n    type: 'CLEAR_NOTIFICATIONS'\r\n  }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n  blogService.setToken(user ? user.token : null)\r\n\r\n  return {\r\n    type: 'SET_USER',\r\n    payload: {\r\n      user\r\n    }\r\n  }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const users = await usersService.get()\r\n      dispatch({\r\n        type: 'INITIALIZE_USERS',\r\n        payload: {\r\n          users\r\n        }\r\n      })\r\n    } catch (err) {\r\n      // Ignore error\r\n    }\r\n  }\r\n}\r\n\r\nexport const addComment = (comment, blogId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await blogService.addComment(comment, blogId)\r\n      dispatch({\r\n        type: 'ADD_COMMENT',\r\n        payload: {\r\n          comment,\r\n          blogId\r\n        }\r\n      })\r\n    } catch (err) {\r\n      // Ignore error\r\n    }\r\n  }\r\n}","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\n\r\nexport const Notification = ({ message }) => {\r\n  return (\r\n    <div className=\"notification\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async (newBlog) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (blog) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${blog.id}`, config)\r\n  return response\r\n}\r\n\r\nconst update = async (blog) => {\r\n  const response = await axios.put(`${baseUrl}/${blog.id}`, blog)\r\n\r\n  return response.data\r\n}\r\n\r\n\r\nconst addComment = async (comment, blogId) => {\r\n  const response = await axios.post(`${baseUrl}/${blogId}/comments`, { content: comment })\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, update, deleteBlog, setToken, addComment }","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst get = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { get }","import React, { useImperativeHandle, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Togglable = React.forwardRef((props, ref) => {\r\n  const [showContent, setShowContent] = useState(false)\r\n\r\n  const toggle = () => setShowContent(!showContent)\r\n  useImperativeHandle(ref, () => ({\r\n    toggle\r\n  }))\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: showContent ? '' : 'none' }}>\r\n        {props.children}\r\n      </div>\r\n      <button\r\n        style={{ display: showContent ? 'none' : '' }}\r\n        onClick={toggle}>\r\n        {props.label}\r\n      </button>\r\n    </>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  label: PropTypes.string.isRequired\r\n}\r\n\r\nTogglable.displayName = 'Togglable'","import React, { useRef, useState } from 'react'\r\nimport { Togglable } from './Togglable'\r\n\r\nexport const BlogForm = (props) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const blogFormRef = useRef()\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    props.handleSubmit({ title, author, url })\r\n    blogFormRef.current.toggle()\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n  return (\r\n    <Togglable label={'New blog'} ref={blogFormRef}>\r\n      <>\r\n        <h2>New</h2>\r\n        <form onSubmit={onSubmit}>\r\n          <div>\r\n            <input\r\n              id=\"titleInput\"\r\n              type=\"text\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              value={title}\r\n              placeholder=\"Title\"\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"authorInput\"\r\n              type=\"text\"\r\n              onChange={(e) => setAuthor(e.target.value)}\r\n              value={author}\r\n              placeholder=\"Author\"\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"urlInput\"\r\n              type=\"text\"\r\n              onChange={(e) => setUrl(e.target.value)}\r\n              value={url}\r\n              placeholder=\"URL\"\r\n            ></input>\r\n          </div>\r\n          <button type=\"submit\">Create</button>\r\n        </form>\r\n      </>\r\n    </Togglable>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { addBlog, createNotification } from '../actions/actions'\r\nimport { BlogForm } from './BlogForm'\r\n\r\n\r\nexport const Home = () => {\r\n  const blogs = useSelector((state) => state.blogs)\r\n  const dispatch = useDispatch()\r\n\r\n  const createBlog = async ({ title, author, url }) => {\r\n    dispatch(addBlog({ title, author, url }))\r\n    dispatch(createNotification(`Added ${title} by ${author}.`, 3000))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Blogs</h1>\r\n      <BlogForm handleSubmit={createBlog}></BlogForm>\r\n\r\n      <div className=\"blogs\">\r\n        <ul>\r\n          {[...blogs]\r\n            .sort((a, b) => b.likes - a.likes)\r\n            .map((blog) => (\r\n              <li key={blog.id}>\r\n                <Link to={`blogs/${blog.id}`} >\r\n                  {blog.title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Users = ({ users }) => {\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th> </th>\r\n            <th>Blogs Created</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user => (\r\n            <tr key={user.id}>\r\n              <td><Link to={`/users/${user.id}`}>{user.name}</Link></td>\r\n              <td>{user.blogs.length}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n\r\n\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const User = ({ user }) => {\r\n  if (!user) {\r\n    return <div>User not found.</div>\r\n  }\r\n\r\n  const hasBlogs = user.blogs.length > 0\r\n\r\n  const blogList = hasBlogs\r\n    ? (\r\n      <>\r\n        <h3>Added Blogs</h3>\r\n        <ul>\r\n          {user.blogs.map(blog => (\r\n            <li key={blog.id}>{blog.title}</li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    )\r\n    : <p>No blogs added.</p>\r\n\r\n  return (\r\n    <>\r\n      <h2>{user.name}</h2>\r\n      {blogList}\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addComment, deleteBlog, updateBlog } from '../actions/actions'\n\nconst Blog = ({ blog }) => {\n  const [comment, setComment] = useState('')\n  const user = useSelector(state => state.users.currentUser)\n  const dispatch = useDispatch()\n\n  if (!blog) {\n    return <p>Blog not found.</p>\n  }\n\n  const handleLike = () => {\n    const updated = { ...blog, likes: blog.likes + 1 }\n    dispatch(updateBlog(updated))\n  }\n\n  const handleDelete = () => {\n    if (window.confirm(`Remove ${blog.title}?`)) {\n      dispatch(deleteBlog(blog))\n    }\n  }\n\n  const handleComment = (e) => {\n    e.preventDefault()\n    dispatch(addComment(comment, blog.id))\n    setComment('')\n  }\n\n  const comments = blog.comments && (\n    <ul>\n      {blog.comments.map(comment => <li key={comment}>{comment}</li>)}\n    </ul>\n  )\n\n  return (\n    <section>\n      <h2>{`${blog.title} by ${blog.author}`}</h2>\n      <a href={blog.url}>{blog.url}</a>\n      <p>Likes: {blog.likes} <button className='like' onClick={handleLike}>Like</button></p>\n      <p>{`Added by ${user.name}.`}</p>\n      {user.id === blog.user.id && (\n        <button onClick={handleDelete}>Delete</button>\n      )}\n      <h2>Comments</h2>\n      <form onSubmit={handleComment}>\n        <input type='text' value={comment} onChange={(e) => setComment(e.target.value)} />\n        <button>Add Comment</button>\n      </form>\n      {comments}\n    </section>\n  )\n}\n\nexport default Blog\n","import React, { useState, useEffect } from 'react'\nimport loginService from './services/login'\nimport { Notification } from './components/Notification'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  createNotification,\n  setUser,\n  initializeBlogs,\n  initializeUsers,\n} from './actions/actions'\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom'\nimport { Home } from './components/Home'\nimport { Users } from './components/Users'\nimport { User } from './components/User'\nimport Blog from './components/Blog'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n  const blogs = useSelector((state) => state.blogs)\n  const users = useSelector((state) => state.users.allUsers)\n  const user = useSelector((state) => state.users.currentUser)\n  const notification = useSelector((state) => state.notification)\n\n  const userMatch = useRouteMatch('/users/:id')\n  const blogMatch = useRouteMatch('/blogs/:id')\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n    dispatch(initializeUsers())\n\n    try {\n      const storedUser = window.localStorage.getItem('user')\n      if (storedUser) {\n        const user = JSON.parse(storedUser)\n        dispatch(setUser(user))\n      }\n    } catch (err) {\n      // Ignore error\n    }\n\n  }, [dispatch])\n\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username: username,\n        password,\n      })\n\n      window.localStorage.setItem('user', JSON.stringify(user))\n      dispatch(setUser(user))\n      setUsername('')\n      setPassword('')\n    } catch (e) {\n      dispatch(createNotification('Login failed', 3000))\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('user')\n    dispatch(setUser(null))\n  }\n\n  const loginForm = () => {\n    return (\n      <form onSubmit={handleLogin}>\n        <div>\n          <label htmlFor=\"username\">Username: </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">Login</button>\n        </div>\n      </form>\n    )\n  }\n\n  if (user == null) {\n    return (\n      <div className=\"container\">\n        <h1>Login</h1>\n        {notification && <Notification message={notification}></Notification>}\n        {loginForm()}\n      </div>\n    )\n  }\n\n  const navbar = (\n    <Navbar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"sm\">\n      <Container>\n        <Navbar.Brand href=\"#\" className=\"border rounded border-info p-1 text-info\">Bloggr</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#\" as=\"span\"><Link to='/' style={{ color: 'white' }}>Blogs</Link></Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\"><Link to='/users' style={{ color: 'white' }}>Users</Link></Nav.Link>\n          </Nav>\n          <Navbar.Text>{`Logged in as ${user.name}`}</Navbar.Text>\n          <Button variant=\"info\" size=\"sm\" className=\"mx-1\" onClick={handleLogout}>Logout</Button>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n\n  return (\n    <Container fluid className=\"px-0\">\n      {navbar}\n      {notification && <Notification message={notification}></Notification>}\n      <Container>\n        <Switch>\n          <Route path='/users/:id'>\n            <User user={userMatch\n              ? users.find(user => user.id === userMatch.params.id)\n              : null}\n            />\n          </Route>\n          <Route path='/users'>\n            <Users users={users}/>\n          </Route>\n          <Route path='/blogs/:id'>\n            <Blog blog={blogMatch\n              ? blogs.find(blog => blog.id === blogMatch.params.id)\n              : null}\n            />\n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </Container>\n    </Container>\n  )\n}\n\nexport default App\n","const initialState = {\r\n  currentUser: null,\r\n  allUsers: []\r\n}\r\n\r\nexport const users = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'INITIALIZE_USERS':\r\n    return {\r\n      ...state,\r\n      allUsers: action.payload.users\r\n    }\r\n  case 'SET_USER':\r\n    return {\r\n      ...state,\r\n      currentUser: action.payload.user\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport { blogs } from './reducers/blogs'\r\nimport { notification } from './reducers/notification'\r\nimport { users } from './reducers/users'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst reducer = combineReducers({\r\n  blogs,\r\n  notification,\r\n  users,\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport default store\r\n","export const blogs = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'SET_BLOGS':\r\n    return action.payload.blogs\r\n  case 'ADD_BLOG':\r\n    return state.concat(action.payload.blog)\r\n  case 'UPDATE_BLOG':\r\n    return state.map(eachBlog =>\r\n      eachBlog.id === action.payload.blog.id\r\n        ? action.payload.blog\r\n        : eachBlog\r\n    )\r\n  case 'DELETE_BLOG':\r\n    return state.filter(eachBlog => eachBlog.id !== action.payload.id)\r\n  case 'ADD_COMMENT':\r\n    return state.map(eachBlog =>\r\n      eachBlog.id !== action.payload.blogId\r\n        ? eachBlog\r\n        : {\r\n          ...eachBlog,\r\n          comments: [\r\n            ...eachBlog.comments,\r\n            action.payload.comment\r\n          ]\r\n        }\r\n    )\r\n  default:\r\n    return state\r\n  }\r\n}\r\n","export const notification = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'NEW_NOTIFICATION':\r\n    return action.payload.text\r\n  case 'CLEAR_NOTIFICATIONS':\r\n    return null\r\n  default:\r\n    return state\r\n  }\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}